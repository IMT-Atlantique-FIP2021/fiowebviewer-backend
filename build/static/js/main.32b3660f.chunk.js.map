{"version":3,"sources":["assets/logo.svg","components/Header.tsx","components/NavBar.tsx","components/ResultTable.tsx","components/ResultExplorer.tsx","components/ResultCompare.tsx","components/Content.tsx","components/Footer.tsx","views/Dashboard.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Header","id","className","to","src","FIOLogo","alt","NavBar","NavBarItem","icon","Search","text","FileText","Book","props","Table","state","timer","loading","fetching","results","this","filter","sr","selected","a","setState","isFetching","fetch","response","json","data","map","r","name","tags","submitted_at","time","getCurrentResultSelectedState","fetchResults","setInterval","clearInterval","length","newSelectedState","isAllSelected","newState","method","selectedResult","forEach","checkbox","checked","onChange","handleOnCheckbox_SelectAll","bind","type","TableLine","result","handleOnCheckbox_Select","actions","onDeleteClick","handleOnDeleteClick","TableContent","handleOnDeleteSelectedClick","Component","TableCompareButton","TableDeleteButton","TableColumnCheckbox","pathname","search","TableColumnTags","TableColumnActions","resultId","formattedProps","createTagBadge","size","tag","onClick","selectedResults","queryParams","concat","join","disabled","randomColor","require","ResultSummary","tableName","open","subMenu","flex-none","href","TableRWOverview","FIOResultExample","Graph","testList","ClatPercentileList","GetDataClatPercentile","xDatakey","xLabel","yLabel","valueOnGraph","IODepthList","GetDataIODepth","dataElement","value","LatencyPercentileList","GetDataLatency","TableCPU","onVisibilityChange","isOpen","TableHeader","children","callbackHandler","rw","percentileData","readData","io","toFixed","bw","iops","runtime","Math","trunc","slat","clat","lat","slat_min","slat_max","slat_mean","slat_stdev","clat_min","clat_max","clat_mean","clat_stdev","lat_min","lat_max","lat_mean","lat_stdev","bw_min","bw_max","bw_mean","bw_stdev","bw_agg","clatPercentileClassName","jobData","cpu_usr","cpu_sys","cpu_ctx","cpu_majf","cpu_minf","RandomColor","luminosity","hue","formatedData","key","push","Number","parseFloat","toString","toPrecision","Data","DataUs","DataMs","color","activated","TableJobs","initState","testData","activatedValue","newActivatedValue","obj","test","handleOnChange","style","htmlFor","xTickCount","xType","title","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickCount","allowDecimals","label","position","YAxis","angle","Tooltip","testName","Line","stroke","activeDot","LabelList","offset","ResultCompare","Content","query","URLSearchParams","useLocation","path","ContentElement","getAll","Footer","Dashboard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b3660f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6904a498.svg\";","import { Link } from \"react-router-dom\";\nimport FIOLogo from \"../assets/logo.svg\";\nimport ThemeToggle from \"./ThemeToggle\";\n\nexport default function Header() {\n    return (\n        <div id=\"HEADER\" className=\"bg-blue-ovh-dark py-7\">\n            <div className=\"container mx-auto px-5\">\n                <div className=\"flex flex-row justify-between\">\n                    <Link\n                        to=\"/\"\n                        className=\"flex items-center text-white group\"\n                    >\n                        <img src={FIOLogo} className=\"transition duration-1000 ease-in-out transform group-hover:-rotate-180 h-7\" alt=\"\" />\n                        <div className=\"font-bold text-2xl ml-1 mr-3\">FLEX</div>\n                        <div className=\"font-light text-xl opacity-80 group-hover:opacity-100\">\n                            Flexible I/O Explorer\n                        </div>\n                    </Link>\n                    {/* <ThemeToggle /> */}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { FC } from \"react\";\nimport { Search, FileText, Book, IconProps } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NavBar() {\n    return (\n        <div id=\"NAVBAR\" className=\"bg-blue-ovh-light\">\n            <div className=\"container mx-auto\">\n                <div className=\"flex flex-row\">\n                    <Link to=\"/\">\n                        <NavBarItem icon={Search} text=\"Result Table\" />\n                    </Link>\n\n                    <Link to=\"/download\">\n                        <NavBarItem icon={FileText} text=\"Download Script\" />\n                    </Link>\n\n                    <div className=\"flex-grow\"></div>\n\n                    <Link to=\"/docs\">\n                        <NavBarItem icon={Book} text=\"Docs\" />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\ntype NavBarItemProps = {\n    icon: FC<IconProps>;\n    text: string;\n};\n\nfunction NavBarItem(props: NavBarItemProps) {\n    return (\n        <div className=\"px-5\">\n            <div className=\"text-white font-semibold py-4 opacity-70 hover:opacity-100 hover:border-gray-200 border-blue-ovh-light border-b-2\">\n                <div className=\"flex flex-row items-center\">\n                    <props.icon className=\"mr-1 h-5\" />\n                    {props.text}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Tag, XCircle, PlusCircle, Loader, Coffee } from \"react-feather\";\n\ninterface Result {\n    id: string;\n    name: string;\n    tags: string[];\n    submitted_at: string;\n}\n\ninterface ResultState extends Result {\n    selected: boolean;\n}\n\nexport default class Table extends Component {\n    state: {\n        loading: boolean;\n        fetching: boolean;\n        results: ResultState[];\n    };\n    timer: NodeJS.Timeout | null;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            loading: true,\n            fetching: false,\n            results: [],\n        };\n        this.timer = null;\n    }\n\n    getCurrentResultSelectedState(id: string) {\n        return (\n            this.state.results.filter((sr) => sr.id === id)[0]?.selected ||\n            false\n        );\n    }\n\n    async fetchResults() {\n        if (this.state.fetching) return;\n        else this.setState({ ...this.state, isFetching: true });\n\n        const get_result_list_url = \"/api/result/\";\n        const response = await fetch(get_result_list_url);\n        const data = await response.json();\n\n        const results: ResultState[] = data.map((r: any) => ({\n            id: r.id,\n            name: r.name,\n            tags: r.tags,\n            submitted_at: r.time,\n            selected: this.getCurrentResultSelectedState(r.id),\n        }));\n\n        this.setState({ loading: false, isFetching: false, results: results });\n    }\n\n    async componentDidMount() {\n        await this.fetchResults();\n        this.timer = setInterval(() => this.fetchResults(), 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n\n    isAllSelected() {\n        return (\n            this.state.results.filter((r) => r.selected).length ===\n                this.state.results.length && this.state.results.length !== 0\n        );\n    }\n\n    selectedResult() {\n        return this.state.results.filter((r) => r.selected).map((r) => r.id);\n    }\n\n    handleOnCheckbox_SelectAll() {\n        const newSelectedState = !this.isAllSelected();\n\n        this.setState(\n            this.state.results.map((r) => (r.selected = newSelectedState))\n        );\n    }\n\n    handleOnCheckbox_Select(id: string) {\n        const newState = this.state.results\n            .filter((r) => r.id === id)\n            .map((r) => (r.selected = !r.selected));\n        this.setState(newState);\n    }\n\n    async handleOnDeleteClick(id: string) {\n        const delete_result_url = \"/api/result/\";\n        await fetch(delete_result_url + id, { method: \"DELETE\" });\n        this.fetchResults();\n    }\n\n    async handleOnDeleteSelectedClick() {\n        const delete_result_url = \"/api/result/\";\n        this.selectedResult().forEach((id: string) => {\n            fetch(delete_result_url+id, { method: \"DELETE\" });\n        })\n        this.fetchResults();\n    }\n\n    render() {\n        const results = this.state.results;\n        return (\n            <div>\n                <table className=\"table-fixed w-full\">\n                    {TableHeader({\n                        checked: this.isAllSelected(),\n                        onChange: this.handleOnCheckbox_SelectAll.bind(this),\n                    })}\n                    <tbody>\n                        {results.map((r) => (\n                            <TableLine\n                                key={r.id}\n                                result={r}\n                                checkbox={{\n                                    checked: r.selected,\n                                    onChange: this.handleOnCheckbox_Select.bind(\n                                        this,\n                                        r.id\n                                    ),\n                                }}\n                                actions={{\n                                    onDeleteClick: this.handleOnDeleteClick.bind(\n                                        this,\n                                        r.id\n                                    ),\n                                }}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n                {TableContent(\n                    this.state.loading,\n                    this.state.results,\n                    this.selectedResult(),\n                    this.handleOnDeleteSelectedClick.bind(this)\n                )}\n            </div>\n        );\n    }\n}\n\nfunction TableContent(\n    loading: boolean,\n    results: ResultState[],\n    selectedResult: string[],\n    onDeleteClick: () => void\n) {\n    if (loading) {\n        // Currently fetching results\n        return (\n            <div className=\"flex flex-row justify-center p-4 animate-pulse\">\n                <Loader className=\"animate-spin mr-4\" />\n                <div className=\"select-none\">Fetching results...</div>\n            </div>\n        );\n    }\n\n    if (results.length === 0) {\n        // Currently no result to show\n        return (\n            <div className=\"flex flex-row justify-center p-4 opacity-70\">\n                <Coffee className=\"mr-4\" />\n                <div className=\"select-none\">No result available...</div>\n            </div>\n        );\n    }\n\n    if (results) {\n        // Currently with results\n        return (\n            <div className=\"flex justify-evenly p-4\">\n                {TableCompareButton(selectedResult)}\n                {TableDeleteButton(selectedResult, onDeleteClick)}\n            </div>\n        );\n    }\n}\n\nfunction TableHeader(checkbox: CheckboxProps) {\n    return (\n        <thead>\n            <tr className=\"text-left border-b\">\n                <th className=\"w-14\">\n                    <div className=\"flex content-center justify-center\">\n                        <input\n                            {...checkbox}\n                            type=\"checkbox\"\n                            className=\"rounded\"\n                        />\n                    </div>\n                </th>\n                <th className=\"py-4 px-4 w-64\">Job Name</th>\n                <th className=\"py-4 px-4\">Tags</th>\n                <th className=\"py-4 w-32 text-center\">Submitted at</th>\n                <th className=\"w-20 text-center\"></th>\n            </tr>\n        </thead>\n    );\n}\n\ntype TableLineProps = {\n    result: Result;\n    checkbox: CheckboxProps;\n    actions: ActionProps;\n};\n\nfunction TableLine(props: TableLineProps) {\n    return (\n        <tr className=\"border-b odd:bg-gray-100\">\n            {TableColumnCheckbox(props.result.id, props.checkbox)}\n            {TableColumnJobname(props.result.name, props.result.id)}\n            {TableColumnTags(props.result.tags)}\n            {TableColumnSubmittedat(props.result.submitted_at)}\n            {TableColumnActions(props.actions)}\n        </tr>\n    );\n}\n\ntype CheckboxProps = {\n    checked: boolean;\n    onChange: () => void;\n};\n\nfunction TableColumnCheckbox(resultId: string, checkbox: CheckboxProps) {\n    const formattedProps = {\n        ...checkbox,\n        id: \"checkbox_\" + resultId,\n    };\n\n    return (\n        <td>\n            <div className=\"flex content-center justify-center\">\n                <input\n                    {...formattedProps}\n                    type=\"checkbox\"\n                    className=\"rounded\"\n                />\n            </div>\n        </td>\n    );\n}\n\nfunction TableColumnJobname(name: string, id: string) {\n    return (\n        <td className=\"px-4 truncate\">\n            <Link\n                to={{\n                    pathname: \"/result\",\n                    search: \"?id=\" + id,\n                }}\n                className=\"text-blue-ovh-light hover:text-blue-ovh-dark underline text-base\"\n            >\n                {name}\n            </Link>\n        </td>\n    );\n}\n\nfunction TableColumnTags(tags: string[]) {\n    function createTagBadge(text: string) {\n        return (\n            <div className=\"flex flex-row flex-none bg-gray-300 rounded-full px-2 my-1 items-center\">\n                <Tag size={18} className=\"pr-1\" />\n                <div className=\"text-xs font-semibold\">{text}</div>\n            </div>\n        );\n    }\n\n    return (\n        <td className=\"px-4\">\n            <div className=\"flex flex-row justify-start space-x-2 overflow-x-auto scrollbar-thin\">\n                {tags.map((tag) => createTagBadge(tag))}\n            </div>\n        </td>\n    );\n}\n\nfunction TableColumnSubmittedat(submitted_at: string) {\n    return <td className=\"px-4 text-xs text-center\">{submitted_at}</td>;\n}\n\ntype ActionProps = {\n    onDeleteClick: () => void;\n};\n\nfunction TableColumnActions(props: ActionProps) {\n    return (\n        <td className=\"px-4\">\n            <div className=\"flex flex-row justify-start space-x-1\">\n                <button onClick={props.onDeleteClick}>\n                    <XCircle size={20} className=\"text-red-500\" />\n                </button>\n                <button>\n                    <PlusCircle size={20} className=\"text-blue-500\" />\n                </button>\n            </div>\n        </td>\n    );\n}\n\nfunction TableCompareButton(selectedResults: string[]) {\n    const queryParams = \"?\".concat(\n        selectedResults.map((r) => \"id=\" + r).join(\"&\")\n    );\n\n    return (\n        <Link\n            to={{\n                pathname: \"/compare\",\n                search: queryParams,\n            }}\n        >\n            <button\n                {...{ disabled: selectedResults.length <= 1 }}\n                className=\"disabled:opacity-50 disabled:bg-gray-400 bg-blue-ovh-light hover:opacity-100 opacity-80 p-2 w-64 font-semibold border rounded text-white\"\n            >\n                Compare {selectedResults.length} result\n                {selectedResults.length > 1 ? \"s\" : \"\"}\n            </button>\n        </Link>\n    );\n}\n\nfunction TableDeleteButton(selectedResults: string[], onDeleteClick: () => void) {\n    return (\n        <button\n            {...{ disabled: selectedResults.length <= 0 }}\n            onClick={onDeleteClick}\n            className=\"disabled:opacity-50 disabled:bg-gray-400 bg-red-600 hover:opacity-100 opacity-80 p-2 w-64 font-semibold border rounded text-white\"\n        >\n            Delete {selectedResults.length} result\n            {selectedResults.length > 1 ? \"s\" : \"\"}\n        </button>\n    );\n}\n","import { Component, FC, PureComponent, ReactNode } from \"react\";\nimport { ChevronRight, ChevronDown } from \"react-feather\";\nimport { LabelList, LineChart, ReferenceLine, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, YAxisProps, Label } from 'recharts';\nimport testData from \"../assets/testList.json\"\nimport FIOResultExample from \"../assets/FIOResultExample3.16.json\"\n\nvar randomColor = require('randomcolor');\n//Function wich implements the graphical interface for the details on a specific test\nexport default function ResultSummary() {\n    return (\n        <div className=\"px-5 py-3\">\n            <div className=\"container mx-auto px-5\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 lg:space-x-5\">\n                    <div className=\"space-y-5\">\n                        <Table tableName=\"FIO Test Name\" open>\n                            <Table tableName=\"FIO user args\" subMenu open>{TableTestNameUserArgsValue()}</Table>\n                            <Table tableName=\"Output\" subMenu open>{TableTestNameOutputValue()}</Table>\n                            <Table tableName=\"CSV\" subMenu open>{TableTestCsvValue()}</Table>\n                        </Table>\n\n                        <Table tableName=\"READ\" open>\n                            <Table tableName=\"OVERVIEW\" subMenu open>\n                                {TableRWOverview(FIOResultExample, \"read\")}\n                            </Table>\n                            <Table tableName=\"COMPLETION LATENCY PERCENTILE\" subMenu open>\n                                <Graph testList={ClatPercentileList} data={GetDataClatPercentile(FIOResultExample, \"read\")} xDatakey=\"clat_percentile\" xLabel=\"%\" yLabel=\"ms\" valueOnGraph={true} />\n                            </Table>\n                        </Table>\n\n                        <Table tableName=\"WRITE\" open>\n                            <Table tableName=\"OVERVIEW\" subMenu open>\n                                {TableRWOverview(FIOResultExample, \"write\")}\n                            </Table>\n                            <Table tableName=\"COMPLETION LATENCY PERCENTILE\" subMenu open>\n                                <Graph testList={ClatPercentileList} data={GetDataClatPercentile(FIOResultExample, \"write\")} xDatakey=\"clat_percentile\" xLabel=\"%\" yLabel=\"ms\" valueOnGraph={true} />\n                            </Table>\n                        </Table>\n\n                        <Table tableName=\"TRIM\" open>\n                            <Table tableName=\"OVERVIEW\" subMenu open>\n                                {TableRWOverview(FIOResultExample, \"trim\")}\n                            </Table>\n                            <Table tableName=\"COMPLETION LATENCY PERCENTILE\" subMenu open>\n                                <Graph testList={ClatPercentileList} data={GetDataClatPercentile(FIOResultExample, \"trim\")} xDatakey=\"clat_percentile\" xLabel=\"%\" yLabel=\"ms\" valueOnGraph={true} />\n                            </Table>\n                        </Table>\n\n                        <Table tableName=\"IO DEPTH\" open>\n                            <Graph testList={IODepthList} data={GetDataIODepth(FIOResultExample).filter(dataElement => dataElement.value != 0)} xDatakey=\"io_depth\" xLabel=\"Depth Level\" yLabel=\"%\" valueOnGraph={true} />\n                        </Table>\n\n                        <Table tableName=\"LATENCY\" open>\n                            <Graph testList={LatencyPercentileList} data={GetDataLatency(FIOResultExample).filter(dataElement => dataElement.value != 0)} xDatakey=\"latency\" xLabel=\"ms\" yLabel=\"%\" valueOnGraph={true} />\n                        </Table>\n\n                        <Table tableName=\"CPU\" open>\n                            {TableCPU(FIOResultExample)}\n                        </Table>\n                    </div>\n                    <div className=\"space-y-5 py-5 lg:py-0\">\n                        <Table tableName=\"Jobs\" open >\n                            <TableJobs />\n                        </Table>\n                    </div>\n                </div>\n\n            </div>\n        </div >\n    );\n}\n\n\n//Tables are menus shown as opening cells in the interface\ntype TableProps = {\n    subMenu?: boolean,\n    tableName: string,\n    open?: boolean,\n}\n\nclass Table extends Component<TableProps> {\n    state: { isOpen: boolean };\n    subMenu: boolean;\n    tableName: string;\n\n    constructor(props: TableProps) {\n        super(props);\n        this.onVisibilityChange = this.onVisibilityChange.bind(this);\n        this.subMenu = props.subMenu || false;\n        this.state = { isOpen: props.open || false };\n        this.tableName = props.tableName || \"\";\n\n    }\n\n    onVisibilityChange() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    render() {\n        if (!this.subMenu) {  // FIXME\n            return (\n                <div className=\"flex-none rounded shadow-lg bg-white \">\n                    <div className=\"bg-blue-ovh-light h-1 rounded-t\" />\n                    <div className=\"font-bold py-3 border-b\">\n                        {TableHeader(this.tableName, this.state.isOpen, this.onVisibilityChange)}\n                    </div>\n                    {\n                        this.state.isOpen &&\n                        <div>\n                            {this.props.children}\n                        </div>\n                    }\n                </div>\n            )\n        }\n        else\n            return (\n                <div className=\"py-1 border-b\">\n                    <div>\n                        {TableHeader(this.tableName, this.state.isOpen, this.onVisibilityChange)}\n                    </div>\n                    {\n                        this.state.isOpen &&\n                        <div>\n                            {this.props.children}\n                        </div>\n                    }\n                </div>\n            )\n    }\n}\n\nfunction TableHeader(tableName: string, isOpen: boolean, callbackHandler: any) {\n    return (\n        <div className=\"flex px-5\">\n            <button onClick={callbackHandler} className=\"align-bottom\">\n                {isOpen ? <ChevronDown /> : <ChevronRight />}\n            </button>\n            {tableName}\n        </div>\n    )\n}\n\n\nfunction TableTestNameUserArgsValue() {\n    return (\n        <div className=\"px-5 text-xs\">\n            ./fio-webviewer.sh --webviewer-tag FIO-READ-WRITE --webviewer-name FIO-TESTRW --name=randwrite --iodepth=1 --rw=randwrite --bs=4k --direct=0 --size=512M --numjobs=2 --runtime=240 --output=~/fioviewer/test.txt\n        </div>\n    );\n}\n\n\nfunction TableTestNameOutputValue() {\n    return (\n        <div flex-none className=\"px-5 text-xs \">\n            randread: (g=0): rw=randread, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=psync, iodepth=16\n            ...\n            fio-3.8\n            Starting 4 processes\n            randread: Laying out IO file (1 file / 512MiB)\n            randread: Laying out IO file (1 file / 512MiB)\n            randread: Laying out IO file (1 file / 512MiB)\n            randread: Laying out IO file (1 file / 512MiB)\n\n        </div>\n    );\n}\n\nfunction TableTestCsvValue() {\n    return (\n        <div flex-none className=\"px-5 text-s  text-blue-ovh-light underline hover:text-blue-ovh-dark \">\n            <a href=\"https://guigui.io/\" >Download all as tar.gz</a>\n        </div>\n    );\n}\n\n//Function to show data from FIO read section into a datasheet on the interface\nfunction TableRWOverview(data: any, rw: string) {\n    const percentileData = GetDataClatPercentile(data, rw);\n    const readData = data[\"jobs\"][0][rw];\n\n    const io = (readData[\"io_kbytes\"] / 1000).toFixed(2) + \"MB\";\n    const bw = (readData[\"bw\"] / 1000).toFixed(2) + \"MB/s\";\n    const iops = readData[\"iops\"].toFixed(2);\n    const runtime = Math.trunc((readData[\"runtime\"] / 3600000)) + \"h \" + Math.trunc((readData[\"runtime\"] / 60000 % 60)) + \"m \" + (readData[\"runtime\"] / 1000 % 60).toFixed(0) + \"s\"\n\n    const slat = (readData[\"slat_ns\"])\n    const clat = (readData[\"clat_ns\"])\n    const lat = (readData[\"lat_ns\"])\n\n    const slat_min = (slat[\"min\"] / 1000000).toFixed(3) + \" ms\"\n    const slat_max = (slat[\"max\"] / 1000000).toFixed(3) + \" ms\"\n    const slat_mean = (slat[\"mean\"] / 1000000).toFixed(3) + \" ms\"\n    const slat_stdev = (slat[\"stddev\"] / 1000000).toFixed(3) + \" ms\"\n    const clat_min = (clat[\"min\"] / 1000000).toFixed(3) + \" ms\"\n    const clat_max = (clat[\"max\"] / 1000000).toFixed(3) + \" ms\"\n    const clat_mean = (clat[\"mean\"] / 1000000).toFixed(3) + \" ms\"\n    const clat_stdev = (clat[\"stddev\"] / 1000000).toFixed(3) + \" ms\"\n    const lat_min = (lat[\"min\"] / 1000000).toFixed(3) + \" ms\"\n    const lat_max = (lat[\"max\"] / 1000000).toFixed(3) + \" ms\"\n    const lat_mean = (lat[\"mean\"] / 1000000).toFixed(3) + \" ms\"\n    const lat_stdev = (lat[\"stddev\"] / 1000000).toFixed(3) + \" ms\"\n\n    const bw_min = (readData[\"bw_min\"] / 1000).toFixed(2) + \" MB/s\"\n    const bw_max = (readData[\"bw_max\"] / 1000).toFixed(2) + \" MB/s\"\n    const bw_mean = (readData[\"bw_mean\"] / 1000).toFixed(2) + \" MB/s\"\n    const bw_stdev = (readData[\"bw_dev\"] / 1000).toFixed(2) + \" MB/s\"\n    const bw_agg = (readData[\"bw_agg\"]).toFixed(2) + \" %\"\n\n    let clatPercentileClassName = \"grid grid-flow-col grid-cols-\" + percentileData.length + \"grid-rows-2\";\n\n    const clatPercentileGrid = (\n        <div>\n            OK\n        </div>\n    );\n\n    return (\n        <div className=\"\">\n            <div className=\"grid grid-flow-col grid-flow-row grid-cols-4 grid-rows-2 text-sm divide-y divide-x text-center\">\n                <div>Io</div>\n                <div>{io}</div>\n                <div>Bandwidth</div>\n                <div>{bw}</div>\n                <div>Iops</div>\n                <div>{iops}</div>\n                <div>Runtime</div>\n                <div>{runtime}</div>\n            </div>\n\n            <div className=\"p-2 grid grid-flow-col grid-flow-row grid-cols-5 grid-rows-4 text-sm  divide-y divide-x text-center\">\n                <div></div>\n                <div>Submition Latency</div>\n                <div>Competion Latency</div>\n                <div>Latency</div>\n                <div>Min</div>\n                <div>{slat_min}</div>\n                <div>{clat_min}</div>\n                <div>{lat_min}</div>\n                <div>Max</div>\n                <div>{slat_max}</div>\n                <div>{clat_max}</div>\n                <div>{lat_max}</div>\n                <div>Mean</div>\n                <div>{slat_mean}</div>\n                <div>{clat_mean}</div>\n                <div>{lat_mean}</div>\n                <div>Standard Deviation</div>\n                <div>{slat_stdev}</div>\n                <div>{clat_stdev}</div>\n                <div>{lat_stdev}</div>\n            </div>\n            <div className=\"text-lg text-center\">\n                Bandwidth\n            </div>\n            <div className=\" grid grid-flow-col grid-flow-row grid-cols-5 grid-rows-2 text-sm divide-y divide-x text-center\">\n                <div>Min</div>\n                <div>{bw_min}</div>\n                <div>Max</div>\n                <div>{bw_max}</div>\n                <div>Mean</div>\n                <div>{bw_mean}</div>\n                <div>Standard Deviation</div>\n                <div>{bw_stdev}</div>\n                <div>Percentage</div>\n                <div>{bw_agg}</div>\n            </div>\n\n            <div className={clatPercentileClassName}>\n            </div>\n\n        </div>\n\n\n    );\n\n}\n\n\nfunction TableCPU(data: any) {\n    const jobData = data[\"jobs\"][0]\n    const cpu_usr = jobData[\"usr_cpu\"] + \" %\"\n    const cpu_sys = jobData[\"sys_cpu\"] + \" %\"\n    const cpu_ctx = jobData[\"ctx\"]\n    const cpu_majf = jobData[\"majf\"]\n    const cpu_minf = jobData[\"minf\"]\n\n    return (\n        <div>\n            <div className=\"grid grid-flow-col grid-flow-row grid-cols-2 grid-rows-5 text-sm divide-y divide-x text-center\">\n                <div>User</div>\n                <div>System</div>\n                <div>Context Switches</div>\n                <div>Major Fault</div>\n                <div>Minor Fault</div>\n                <div>{cpu_usr}</div>\n                <div>{cpu_sys}</div>\n                <div>{cpu_ctx}</div>\n                <div>{cpu_majf}</div>\n                <div>{cpu_minf}</div>\n            </div>\n        </div>\n    )\n}\n\n\n//Function which limits the colors used in the graph lines\nfunction RandomColor() {\n    return randomColor({\n        luminosity: 'bright',\n        hue: 'random',\n    })\n}\n\n\n\ntype ClatPercentileType = {\n    \"clat_percentile\": string\n    \"value\": number\n}\n\n//Function to transform data from FIO into usable data array in Graph for clat percentile\nfunction GetDataClatPercentile(data: any, rw: string) {\n    const percentileData = data[\"jobs\"][0][rw][\"clat_ns\"][\"percentile\"]\n\n    let formatedData: ClatPercentileType[] = [];\n\n    for (const key in percentileData) {\n        formatedData.push({\n            \"clat_percentile\": Number.parseFloat(key).toString(),\n            \"value\": percentileData[key].toPrecision(3) / 1000000\n        })\n    }\n    // console.log(formatedData);\n    return formatedData;\n}\n\ntype IODepthType = {\n    \"io_depth\": string\n    \"value\": number\n}\n\n//Function to transform data from FIO into usable data array in Graph for IO Depth\nfunction GetDataIODepth(data: any) {\n    const Data = data[\"jobs\"][0][\"iodepth_level\"]\n\n    let formatedData: IODepthType[] = [];\n\n    for (const key in Data) {\n        formatedData.push({\n            \"io_depth\": key,\n            \"value\": Data[key].toPrecision(3)\n        })\n    }\n    // console.log(formatedData);\n    return formatedData;\n}\n\n\n\ntype LatencyType = {\n    \"latency\": number\n    \"value\": number\n}\n\n//Function to transform data from FIO into usable data array in Graph for latency percentile\nfunction GetDataLatency(data: any) {\n    const DataUs = data[\"jobs\"][0][\"latency_us\"]\n    const DataMs = data[\"jobs\"][0][\"latency_ms\"]\n\n    let formatedData: LatencyType[] = [];\n\n    for (const key in DataUs) {\n        formatedData.push({\n            \"latency\": (+key) / 1000,\n            \"value\": DataUs[key].toPrecision(4)\n        })\n    }\n\n    for (const key in DataMs) {\n        formatedData.push({\n            \"latency\": (+key),\n            \"value\": DataMs[key].toPrecision(3)\n        })\n    }\n\n    // console.log(formatedData);\n    return formatedData;\n}\n\n\n\n\n//Array in which the colors, names, and activation of the jobs are stored\ntype testListType = {\n    id: string,\n    color: string,\n    activated: boolean\n}\nconst testList: testListType[] = [\n    { id: \"average\", color: \"blue\", activated: true },\n    { id: \"uv\", color: RandomColor(), activated: true },\n    { id: \"pv\", color: RandomColor(), activated: true },\n    { id: \"amt\", color: RandomColor(), activated: true }\n];\n\nconst ClatPercentileList: testListType[] = [\n    { id: \"value\", color: \"blue\", activated: true }\n];\n\nconst LatencyPercentileList: testListType[] = [\n    { id: \"value\", color: \"blue\", activated: true }\n];\n\nconst IODepthList: testListType[] = [\n    { id: \"value\", color: \"blue\", activated: true }\n];\n\n//Define the Table Jobs Content\nclass TableJobs extends Component {\n    state: {\n        data: unknown[],\n        activatedValue: testListType[],\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.state = this.initState();\n    }\n\n    initState() {\n        return { data: testData, activatedValue: testList };\n    }\n\n    handleOnChange(id: string) {\n        let newActivatedValue: testListType[] = this.state.activatedValue;\n        newActivatedValue.filter((obj) => (obj.id === id)).map((obj) => (obj.activated = !obj.activated))\n        this.setState({ ...this.state, activatedValue: newActivatedValue })\n    }\n\n    render() {\n        return (\n            <div className=\"grid grid-cols-4 auto-layout\">\n                <div className=\"col-span-1 border-r-2 p-2\">\n\n                    {this.state.activatedValue.map((test) => {\n                        const id_input = \"RE_TestResult_Cb_\" + test.id;\n                        return (\n                            <div>\n                                <input id={test.id} checked={test.activated} type=\"checkbox\" className=\"rounded ml-2 mr-2\" onChange={this.handleOnChange.bind(this, test.id)} />\n                                <label style={{ color: test.color }} htmlFor={test.id}>{test.id}</label>\n                            </div>\n                        );\n                    })\n                    }\n                </div>\n                <div className=\"col-span-3\">\n                    <Graph testList={this.state.activatedValue} data={this.state.data} xTickCount={this.state.data.length / 10 + 2} xType=\"number\" xDatakey=\"name\" title=\"Bandwidth\" xLabel=\"t[s]\" yLabel=\"MB/s\" />\n                    <Graph testList={this.state.activatedValue} data={this.state.data} xTickCount={this.state.data.length / 10 + 2} xType=\"number\" xDatakey=\"name\" title=\"IOPS\" xLabel=\"t[s]\" yLabel=\"iops\" />\n                    <Graph testList={this.state.activatedValue} data={this.state.data} xTickCount={this.state.data.length / 10 + 2} xType=\"number\" xDatakey=\"name\" title=\"Latency\" xLabel=\"t[s]\" yLabel=\"ms\" />\n                    <Graph testList={this.state.activatedValue} data={this.state.data} xTickCount={this.state.data.length / 10 + 2} xType=\"number\" xDatakey=\"name\" title=\"Submission Latency\" xLabel=\"t[s]\" yLabel=\"ms\" />\n                    <Graph testList={this.state.activatedValue} data={this.state.data} xTickCount={this.state.data.length / 10 + 2} xType=\"number\" xDatakey=\"name\" title=\"Completion Latency\" xLabel=\"t[s]\" yLabel=\"ms\" />\n                    <div className=\"p-5\"/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n//Graph defines the different graphs in the Result details interface\ntype GraphProps = {\n    title?: string;\n    xLabel: YAxisProps[\"label\"];\n    yLabel: YAxisProps[\"label\"];\n    xDatakey: string;\n    data: any;          // FIXME\n    testList: any;      // FIXME\n    valueOnGraph?: boolean;\n    xTickCount?: number;\n    xType?: any;\n    //domainMax: number;\n}\n\nfunction Graph(props: GraphProps) {\n    var valueOnGraph = props.valueOnGraph || false;\n    return (\n        <div className=\"h-60 p-5\" >\n            <div className=\"text-lg text-center\">\n                {props.title}\n            </div>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                    width={500}\n                    height={300}\n                    data={props.data}\n                    margin={{\n                        top: 15,\n                        right: 15,\n                        left: 10,\n                        bottom: 20,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey={props.xDatakey} type={props.xType || \"category\"} tickCount={props.xTickCount || 5} allowDecimals={true} label={{ value: props.xLabel, position: 'bottom' }} />\n                    <YAxis label={{ value: props.yLabel, angle: -90, position: 'left' }} />\n                    <Tooltip />\n                    {props.testList.map((testName: any) => {\n                        if (testName.activated) {\n                            return (\n                                <Line type=\"linear\" dataKey={testName.id} stroke={testName.color} activeDot={{ r: 5 }}>\n                                    {valueOnGraph ? <LabelList dataKey={testName.id} position=\"top\" offset={10} className=\"text-xs\" /> : \"\"}\n                                </Line>);\n                        }\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n","\nexport default function ResultCompare() {\n    return (\n        <div className=\"px-5 py-3\">\n            Not Implemented Yet...\n        </div>\n    )\n}","import { ReactNode } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport ResultTable from \"./ResultTable\";\nimport ResultExplorer from \"./ResultExplorer\";\nimport ResultCompare from \"./ResultCompare\";\n\nexport default function Content() {\n    let query = useQuery();\n\n    return (\n        <div id=\"CONTENT\" className=\"my-8 flex flex-col space-y-5\">\n            <Switch>\n                <Route path=\"/result\">\n                    <ResultExplorer />\n                </Route>\n\n                <Route path=\"/compare\">\n                    <ContentElement\n                        title={\n                            \"Compare \" + query.getAll(\"id\").join(\" & \") ||\n                            \"Unkown result\"\n                        }\n                    >\n                        <ResultCompare />\n                    </ContentElement>\n                </Route>\n\n                <Route path=\"/\">\n                    <ContentElement title=\"Result Table\">\n                        <ResultTable />\n                    </ContentElement>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\ntype ContentElementProps = {\n    title: string;\n    children: ReactNode;\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ContentElement(props: ContentElementProps) {\n    return (\n        <div className=\"container mx-auto px-5\">\n            <div className=\"rounded shadow-lg bg-white\">\n                <div className=\"bg-blue-ovh-light h-1 rounded-t\" />\n                <div className=\"px-5 py-3 border-b\">\n                    <div className=\"text-xl\">{props.title}</div>\n                </div>\n                <div>{props.children}</div>\n            </div>\n        </div>\n    );\n}\n","import { GitHub } from \"react-feather\";\n\nexport default function Footer() {\n    return (\n        <div id=\"FOOTER\" className=\"bg-blue-ovh-light py-5\">\n            <div className=\"container mx-auto px-5\">\n                <div className=\"flex flex-row justify-between\">\n                    <div className=\"text-white font-light\">OVHCloud © 2021</div>\n                    <a\n                        href=\"https://github.com/IMT-Atlantique-FIP2021/fiowebviewer-frontend\"\n                        className=\"text-white font-light hover:underline flex group\"\n                    >\n                        Source code available on\n                        <GitHub className=\"ml-2 opacity-80 group-hover:opacity-100\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import Header from \"../components/Header\";\nimport NavBar from \"../components/NavBar\";\nimport Content from \"../components/Content\";\nimport Footer from \"../components/Footer\";\n\nfunction Dashboard() {\n    return (\n        <div className=\"flex flex-col min-h-screen\">\n            <div className=\"flex-auto bg-gray-200 dark:bg-gray-800\">\n                <Header />\n\n                <NavBar />\n\n                <Content />\n            </div>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Dashboard from \"./views/Dashboard\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Dashboard />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}